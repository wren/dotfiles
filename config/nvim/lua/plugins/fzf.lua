-- This one needs a lot of work to migrate to lua (worth it, but will do later)
cmd(string.format('source %s/core/plugins/fzf.vim', fn.stdpath('config')))
-- -- This is here to use the homebrew installed version of fzf
-- cmd 'set rtp+=/usr/local/opt/fzf'
-- 
-- g.fzf_action = {
--   'ctrl-t': 'tab split',
--   'ctrl-x': 'split',
--   'ctrl-v': 'vsplit'
-- }
-- 
-- 
-- -- Customize fzf colors to match your color scheme
-- g.fzf_colors = {
--   'fg'      = {'fg', 'Normal'},
--   'bg'      = {'bg', '#5f5f87'},
--   'hl'      = {'fg', 'Comment'},
--   'fg+'     = {'fg', 'CursorLine', 'CursorColumn', 'Normal'},
--   'bg+'     = {'bg', 'CursorLine', 'CursorColumn'},
--   'hl+'     = {'fg', 'Statement'},
--   'info'    = {'fg', 'PreProc'},
--   'border'  = {'fg', 'Ignore'},
--   'prompt'  = {'fg', 'Conditional'},
--   'pointer' = {'fg', 'Exception'},
--   'marker'  = {'fg', 'Keyword'},
--   'spinner' = {'fg', 'Label'},
--   'header'  = {'fg', 'Comment'}
-- }
-- 
-- -- ripgrep
-- if fn.executable('rg') == 1 then
--   cmd [[let $FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*" --glob "!**/node_modules/*" --glob "!**/__pycache__/*" 2> /dev/null']]
--   set.grepprg = 'rg --vimgrep'
--   cmd [[command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>).'| tr -d "\017"', 1, <bang>0)]]
-- end
-- 
-- g.fzf_commits_log_options = '--graph --color=always --format="%C(yellow)%h%C(red)%d%C(reset) - %C(bold green)(%ar)%C(reset) %s %C(blue)<%an>%C(reset)"'
-- 
-- cmd [[let $FZF_DEFAULT_OPTS='--layout=reverse']]
-- g.fzf_layout = { window= 'call FloatingFZF()' }
-- 
-- local my_cmd = [[
-- 
-- 
-- 
-- function! FloatingFZF(...)
--   let buf = nvim_create_buf(v:false, v:true)
--   call setbufvar(buf, 'number', 'no')
--   let width = get(a:, 1, 8)
-- 
--   let height = float2nr(&lines/2)
--   " let width = float2nr(&columns - (&columns * 2 / 10))
--   let width = float2nr(&columns * width / 10)
--   "let width = &columns
--   let row = float2nr(&lines / 3)
--   let col = float2nr((&columns - width) / 3)
-- 
--   let opts = {
--         \ 'relative': 'editor',
--         \ 'row': row,
--         \ 'col': col,
--         \ 'width': width,
--         \ 'height':height,
--         \ }
--   let win =  nvim_open_win(buf, v:true, opts)
--   call setwinvar(win, '&number', 0)
--   call setwinvar(win, '&relativenumber', 0)
-- endfunction
-- 
-- " Files + devicons
-- function! Fzf_dev()
--   let l:fzf_files_options = ' -m --bind ctrl-d:preview-page-down,ctrl-u:preview-page-up --preview "bat --color always --theme material {}"'
-- 
--   let opts = fzf#wrap({})
--   let opts.options .= l:fzf_files_options
--   call fzf#run(opts)
-- endfunction
-- 
-- function! FzfSpellSink(word)
--   exe 'normal! "_ciw'.a:word
-- endfunction
-- 
-- function! FzfSpell()
--   let suggestions = spellsuggest(expand("<cword>"))
--   return fzf#run({'source': suggestions, 'sink': function("FzfSpellSink"), 'window': 'call FloatingFZF(4)'})
-- endfunction
-- ]]
-- 
-- local rtp = cmd(my_cmd)
