# Why use YAML to manage plugins? See: http://genkisugimoto.com/blog/manage-vim-plugins-via-yaml/

# StartUp Plugins{{{

# - repo: honza/vim-snippets
- repo: vim-airline/vim-airline
  hook_add: source $VIM_PATH/core/plugins/airline.vim
- repo: vim-airline/vim-airline-themes
- repo: kaicataldo/material.vim
- repo: hzchirs/vim-material

#}}}

# Notes Plugins {{{
# - repo: simplenote-vim/simplenote.vim
#   hook_add: source $VIM_PATH/core/plugins/simplenote.vim
# }}}

# Core Plugins {{{
- repo: neoclide/coc.nvim
  merge: 0
  branch: release
  rev: release
  hook_add: source $VIM_PATH/core/plugins/coc.vim

- repo: moll/vim-bbye
  rev: release

- repo: ap/vim-css-color

- repo: vim-scripts/restore_view.vim
# }}}

# Explorer {{{
- repo: Shougo/defx.nvim
  do: ':UpdateRemotePlugins'
  hook_post_source: source $VIM_PATH/core/plugins/defx.vim
- repo: kristijanhusak/defx-git
- repo: kristijanhusak/defx-icons
# }}}


# =============================================== #
# Everything below this line lazy loads as needed #
# =============================================== #
# Interface {{{
- repo: ryanoasis/vim-devicons
  hook_add: let g:webdevicons_enable_denite = 1

- repo: rhysd/accelerated-jk
  on_map: { n: <Plug> }

- repo: t9md/vim-choosewin
  on_map: { n: <Plug> }
  hook_source: source  $VIM_PATH/core/plugins/vim-choosewin.vim

# - repo: kizza/actionmenu.nvim
#   on_path: .*

- repo: mhinz/vim-startify
  on_cmd: Startify
  depends: vim-devicons
  hook_post_source: source $VIM_PATH/core/plugins/startify.vim


- repo: junegunn/vim-easy-align
  on_ft: [vim,json,go,html,js,jsx,py,css,less,tmpl,toml,xml,sql,Dockerfile]


- repo: yuttie/comfortable-motion.vim
  on_func: comfortable_motion#flick
  hook_post_source: |
        let g:comfortable_motion_no_default_key_mappings = 1
        let g:comfortable_motion_impulse_multiplier = 1

# - repo: rizzatti/dash.vim
#   on_map: { n: <Plug> }
#   hook_add: |
#       let g:dash_map = {
#         \ 'javascript': ['javascript', 'NodeJS'],
#         \ 'javascript.jsx': ['react'],
#         \ 'html': ['html', 'svg'],
#         \ 'go' : 'Go',
#         \}

# - repo: thinca/vim-quickrun
#   on_cmd: QuickRun
#   hook_add: |
#         let g:quickrun_config = {
#             \   "_" : {
#             \       "outputter" : "message",
#             \   },
#             \}
#         let g:quickrun_no_default_key_mappings = 1

- repo: simnalamburt/vim-mundo
  on_map: { n: <Plug> }

- repo: tpope/vim-repeat
  on_map: .*

- repo: liuchengxu/vim-which-key
  on_cmd: [Whichkey, Whichkey!]
  hook_source: source  $VIM_PATH/core/plugins/whichkey.vim
  hook_post_source: |
        call which_key#register('<Space>', 'g:which_key_map')
        call which_key#register(';', 'g:which_key_localmap')
        call which_key#register(']', 'g:which_key_rsbgmap')
        call which_key#register('[', 'g:which_key_lsbgmap')

- repo: easymotion/vim-easymotion
  on_map: { n: <Plug> }
  hook_post_source: |
        let g:EasyMotion_do_mapping = 0
        let g:EasyMotion_prompt = 'Jump to â†’ '
        let g:EasyMotion_keys = 'asdfwevbnjklio'
        let g:EasyMotion_smartcase = 1
        let g:EasyMotion_use_smartsign_us = 1

# }}}

# FZF {{{
- repo: junegunn/fzf.vim
  depends: fzf
  on_cmd: [Colors,Rg,Buffers,Files,Commands,Maps,Find]
  on_func: Fzf_dev
  hook_source: source $VIM_PATH/core/plugins/fzf.vim

# - repo: junegunn/fzf
#   do: './install --all'
  # do: call fzf#install()

# - repo: yuki-ycino/fzf-preview.vim
#   branch: release
#   do: ':UpdateRemotePlugins'

# }}}

# Git Plugins {{{

# git integration
- repo: tpope/vim-fugitive

# - repo: lambdalisue/gina.vim
#   on_cmd: Gina

# - repo: chemzqm/vim-easygit
#   on_cmd: [Gcd, Glcd, Gcommit, Gblame, Gstatus, Gdiff, Gbrowse, Gstatus, Gpush]
#   hook_source: let g:easygit_enable_command = 1


# use coc-git instead of vim-gitgutter
# - repo: airblade/vim-gitgutter
#   on_path: .*
#   hook_source: source ~/.config/nvim/core/plugins/vim-gitgutter.vim

# }}}

# Language {{{

- repo: honza/dockerfile.vim
  on_ft: Dockerfile

- repo: junegunn/vim-emoji
  on_ft: [markdown,vim]

# - repo: Vimjas/vim-python-pep8-indent
#   on_ft: python

- repo: tmhedberg/SimpylFold
  on_ft: python

- repo: Konfekt/FastFold

- repo: vim-scripts/python_match.vim
  on_ft: python

- repo: vim-python/python-syntax
  on_ft: python
  hook_add: let g:python_highlight_all = 1

- repo: neoclide/vim-jsx-improve
  on_ft: [javascript,jsx,javascript.jsx]

- repo: vim-scripts/xml.vim
  on_ft: xm

- repo: pearofducks/ansible-vim
  on_ft: [ yaml.ansible, ansible_hosts ]

- repo: cespare/vim-toml
  on_ft: toml

- repo: elzr/vim-json
  on_ft: json
  hook_add: let g:vim_json_syntax_conceal = 0

- repo: dearrrfish/vim-applescript

- repo: tpope/vim-cucumber

- repo: fatih/vim-go
  on_ft: go
  hook_source: source  $VIM_PATH/core/plugins/vim-go.vim

- repo: tpope/vim-markdown
  on_ft: markdown
  hook_add: |
    let g:markdown_fenced_languages = [ 'html', 'bash=sh', 'css', 'javascript', 'js=javascript', 'go', ]
# }}}

# Coding {{{
  # comments
- repo: tyru/caw.vim
  on_map: { nx: <Plug> }

  # formatting
- repo: sbdchd/neoformat
  on_cmd: [Neoformat,Neoformat!]
  hook_source: source  $VIM_PATH/core/plugins/neoformat.vim

- repo: Yggdroot/indentLine
  on_ft: [python,html,css,vim,javascript,jsx,javascript.jsx,vue,sh]
  hook_source: source $VIM_PATH/core/plugins/indentline.vim

# - repo: liuchengxu/vista.vim
#   on_cmd: [Vista,Vista!,Vista!!]
#   hook_source: source  $VIM_PATH/core/plugins/vista.vim

# - repo: majutsushi/tagbar
#   on_cmd: TagbarToggle
#   hook_source: source  $VIM_PATH/core/plugins/tagbar.vim

# - repo: mattn/emmet-vim
#   on_ft: [html,css,jsx,javascript,javascript.jsx]
#   on_event: InsertEnter
#   hook_add: |
#         let g:use_emmet_complete_tag = 0
#         let g:user_emmet_install_global = 0
#         let g:user_emmet_install_command = 0
#         let g:user_emmet_mode = 'i'
#         let g:user_emmet_leader_key='<C-g>'
#         let g:user_emmet_settings = {
#             \  'javascript.jsx' : {
#             \      'extends' : 'jsx',
#             \  },
#         \}

  # parens matchings
- repo: luochen1990/rainbow
  for: [python,javascript,jsx,javascript.jsx,html,css,go,vim,toml]
  hook_source: let g:rainbow_active = 1

# - repo: Shougo/echodoc.vim
#   on_event: CompleteDone
#   hook_source: |
#         call echodoc#enable()
#         let g:echodoc#type = "virtual"

# - repo: w0rp/ale
#   hook_add: source ~/.config/nvim/core/plugins/vim-ale.vim

# }}}

# Writing {{{
- repo: iamcco/markdown-preview.nvim
  do: 'cd app & yarn install'
  hook_source: |
    let g:mkdp_auto_start = 0
    let g:mkdp_command_for_global = 1

# - repo: junegunn/goyo.vim
#   on_cmd: Goyo
#   hook_source: source  $VIM_PATH/core/plugins/goyo.vim
#
# - repo: junegunn/Limelight.vim
#   on_cmd: Limelight
#}}}

# TextObjectOperator {{{
# - repo: AndrewRadev/splitjoin.vim
#   on_map: { n: <Plug>Splitjoin }

# - repo: terryma/vim-expand-region
#   on_map: { x: <Plug> }

# - repo: kana/vim-textobj-user
#   on_func: textobj#user#

# - repo: kana/vim-operator-user
#   lazy: 1

# - repo: kana/vim-niceblock
#   on_map: { x: <Plug> }

# - repo: kana/vim-smartchr
#   on_event: InsertCharPre

# - repo: kana/vim-operator-replace
#   depends: vim-operator-user
#   on_map: { vnx: <Plug> }

- repo: machakann/vim-sandwich
  on_map: { vnx: [<Plug>(operator-sandwich-,<Plug>(textobj-sandwich-]}

- repo: editorconfig/editorconfig-vim

- repo: mg979/vim-visual-multi

# spelling
- repo: tweekmonster/spellrotate.vim

# - repo: osyo-manga/vim-textobj-multiblock
#   depends: vim-textobj-user
#   on_map: { ox: <Plug> }
#   hook_add:  let g:textobj_multiblock_no_default_key_mappings = 1

# }}}
