# `sheldon` configuration file
# ----------------------------
#
# You can modify this file directly or you can use one of the following
# `sheldon` commands which are provided to assist in editing the config file:
#
# - `sheldon add` to add a new plugin to the config file
# - `sheldon edit` to open up the config file in the default editor
# - `sheldon remove` to remove a plugin from the config file
#
# See the documentation for more https://github.com/rossmacarthur/sheldon#readme

shell = "zsh"

[ templates ]
noop = ':'
defer = { each = true, value = 'zsh-defer source "{{ file }}"' }
path = 'path=( "{{ dir }}" $path )'
path-bin = 'path=( "{{ dir }}/bin" $path )'

direnv-ohmytmux = 'export TMUX_OHMYTMUX_CONFIG_DIR="{{ dir }}"'

cmd-exists = '''
if command -v {{ name }} >/dev/null; then
  export SHELDON_CMD_EXISTS_${(U):-{{name}}}='true'
fi
'''
clean-cmd-exists = 'unset SHELDON_CMD_EXISTS_${(U):-{{name}}}'

make = '''
[[ -n SHELDON_CMD_EXISTS_${(U):-{{name}}} ]] || (
  cd "{{ dir }}"
  make {{ name }}
) >/dev/null
'''

build.each = true
build.value = '''
[[ -n SHELDON_CMD_EXISTS_${(U):-{{name}}} ]] || (
  cd "{{dir}}"
  ./{{ file }}
) >/dev/null
'''

symlink-bin = '''
if [[ ! -e ~/.local/bin/{{ name }} && -e {{ dir }}/{{ name }} ]]; then
  ln -fs {{ dir }}/{{ name }} ~/.local/bin/
fi
'''

lessopen = 'export LESSOPEN="|{{ dir }}/bin/{{name}} %s"'

[ plugins ]

# 2-3ms
[ plugins.zsh-defer ]
github = "romkatv/zsh-defer"

# 8ms
# fzf-tab needs to be loaded after compinit, but before plugins which will wrap
# widgets, such as zsh-autosuggestions or fast-syntax-highlighting!
[ plugins.fzf-tab ]
github = 'aloxaf/fzf-tab'
apply = [ 'defer' ]

# 5-6ms
# [ plugins.ohmyzsh ]
# github = 'ohmyzsh/ohmyzsh'
# use = [ 'lib/clipboard.zsh' ]
# apply = [ 'defer' ]

[ plugins.prezto-modules ]
inline = '''
  zstyle :prezto:load pmodule \
    editor \
    terminal

  zstyle :prezto:module:editor key-bindings vi
  zstyle :prezto:module:editor dot-expansion yes
'''

# defer breaks this (terminal crashes on any keystroke)
[ plugins.prezto ]
github = 'sorin-ionescu/prezto'
use = [ '/init.zsh' ]

# 7-8ms
# doesn't support defer
[ plugins.powerlevel10k ]
github = 'romkatv/powerlevel10k'

# 0-1ms
[ plugins.zsh-completions ]
github = 'zsh-users/zsh-completions'
apply = [ 'defer' ]

# 6ms
[ plugins.zsh-autosuggestions ]
github = 'zsh-users/zsh-autosuggestions'
apply = [ 'defer' ]

# 24ms
# breaks with defer
[ plugins.zsh-syntax-highlighting ]
github = "zsh-users/zsh-syntax-highlighting"

# 0ms
[ plugins.zsh-autosuggestions-config ]
inline = '''
export ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd history completion)
export ZSH_AUTOSUGGEST_USE_ASYNC=1
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1
'''

# 22ms (noop fixes it)
[ plugins.forgit ]
github = 'wfxr/forgit'
apply = ['noop']

# 0ms
[ plugins.forgit-config ]
inline = '''
FORGIT_STASH_FZF_OPTS='--bind="ctrl-x:reload(git stash drop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"'
'''

# 11-12ms
[ plugins.zsh-history-substring-search ]
github = 'zsh-users/zsh-history-substring-search'
apply = [ 'defer' ]

[ plugins.zsh-vim-mode-config-before ]
inline = '''
export VISUAL=nvim
export EDITOR="$VISUAL"
bindkey -v

VIM_MODE_ESC_PREFIXED_WANTED='^?^Hfg' # Default: '^?^Hbdf.g'

# Change cursor styling
MODE_CURSOR_VICMD="block"
MODE_CURSOR_VIINS="blinking bar"
MODE_CURSOR_SEARCH="#ff00ff steady underline"
'''

# 22ms
[ plugins.zsh-vim-mode ]
github = 'softmoth/zsh-vim-mode'
# defer makes the initial cursor not have the correct style (since it's drawn
# before this loads). Maybe worth it?
# apply = [ 'defer' ]

# 12ms
[  plugins.zsh-system-clipboard  ]
github = 'kutsan/zsh-system-clipboard'
# apply = [ 'defer' ]

# 0ms
[ plugins.zsh-vim-mode-config-after ]
inline = '''
# This isn't provided by the plugin, so we roll our own
function zsh-system-clipboard-vicmd-vi-yank-eol() {
  zle vi-yank-eol
  printf '%s' "$CUTBUFFER" | pbcopy
}
zle -N zsh-system-clipboard-vicmd-vi-yank-eol

# Bindings that start with esc are non-sensical in
# vim mode, so we get rid of them
bindkey -rpM viins '^[^['

vim-mode-bindkey vicmd -- beginning-of-line  H
vim-mode-bindkey vicmd -- end-of-line        L
vim-mode-bindkey vicmd -- run-help           K
vim-mode-bindkey vicmd -- fzf-history-widget '/'
vim-mode-bindkey vicmd -- zsh-system-clipboard-vicmd-vi-yank-eol Y

# unbind the system clipboard widgets from delete, so
# deleting actually deletes
vim-mode-bindkey vicmd -- vi-kill-eol        D
vim-mode-bindkey vicmd -- vi-delete          d
'''

# 0ms
[ plugins.ohmytmux ]
github = 'wren/.tmux'
use = [ '.tmux.conf' ]
apply = [ 'direnv-ohmytmux' ]

[ plugins.asdf-nix ]
local = '~/.nix-profile/share/asdf-vm/lib'
use = [ 'asdf.sh' ]
apply = [ 'defer' ]

[ plugins.fzf-nix ]
local = '~/.nix-profile/share/fzf'
use = [ '*.zsh' ]
apply = [ 'defer' ]

[ plugins.direnv-nix ]
inline = 'eval "$(direnv hook zsh)"'

[ plugins.lolcat ]
github = 'jaseg/lolcat'
apply = [ 'cmd-exists', 'make', 'clean-cmd-exists', 'symlink-bin' ]

[ plugins.batpipe ]
github = 'eth-p/bat-extras'
use = [ '/build.sh' ]
apply = [
  'cmd-exists',
  'build',
  'clean-cmd-exists',
  'lessopen',
  'path-bin',
]
