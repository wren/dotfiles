# `sheldon` configuration file
# ----------------------------

shell = "zsh"

[templates]
noop = ':'
defer = { each = true, value = 'zsh-defer source "{{ file }}"' }
path = 'path=( "{{ dir }}" $path )'
path-bin = 'path=( "{{ dir }}/bin" $path )'

direnv-ohmytmux = 'export TMUX_OHMYTMUX_CONFIG_DIR="{{ dir }}"'

cmd-exists = '''
if command -v {{ name }} >/dev/null; then
  export SHELDON_CMD_EXISTS_${(U):-{{name}}}='true'
fi
'''
clean-cmd-exists = 'unset SHELDON_CMD_EXISTS_${(U):-{{name}}}'

make = '''
[[ -z SHELDON_CMD_EXISTS_${(U):-{{name}}} ]] || (
  cd "{{ dir }}"
  make {{ name }}
) >/dev/null
'''

build.each = true
build.value = '''
[[ -n SHELDON_CMD_EXISTS_${(U):-{{name}}} ]] || (
  cd "{{dir}}"
  ./{{ file }}
) >/dev/null
'''

symlink-bin = '''
if [[ ! -e ~/.local/bin/{{ name }} && -e {{ dir }}/{{ name }} ]]; then
  ln -fs {{ dir }}/{{ name }} ~/.local/bin/
fi
'''

lessopen = '''
export LESSOPEN="|{{ dir }}/bin/{{name}} %s"
unset LESSCLOSE
# export LESS="$LESS -R"
export BATPIPE="color"
'''

[plugins]

# 2-3ms
[plugins.zsh-defer]
github = "romkatv/zsh-defer"

# 8ms
# fzf-tab needs to be loaded after compinit, but before plugins which will wrap
# widgets, such as zsh-autosuggestions or fast-syntax-highlighting!
[plugins.fzf-tab]
github = 'aloxaf/fzf-tab'
apply = ['defer']

# 5-6ms
# [ plugins.ohmyzsh ]
# github = 'ohmyzsh/ohmyzsh'
# use = [ 'lib/clipboard.zsh' ]
# apply = [ 'defer' ]

[plugins.prezto-modules]
inline = '''
  zstyle :prezto:load pmodule \
    editor \
    terminal

  zstyle :prezto:module:editor key-bindings vi
  zstyle :prezto:module:editor dot-expansion yes
'''

# defer breaks this (terminal crashes on any keystroke)
[plugins.prezto]
github = 'sorin-ionescu/prezto'
use = ['/init.zsh']

# 0-1ms
[plugins.zsh-completions]
github = 'zsh-users/zsh-completions'
apply = ['defer']

# 6ms
[plugins.zsh-autosuggestions]
github = 'zsh-users/zsh-autosuggestions'

# 24ms
# breaks with defer
[plugins.zsh-syntax-highlighting]
github = "zsh-users/zsh-syntax-highlighting"

# 0ms
[plugins.zsh-autosuggestions-config]
inline = '''
unset ZSH_AUTOSUGGEST_USE_ASYNC
'''

# 22ms (noop fixes it)
[plugins.forgit]
github = 'wfxr/forgit'
apply = ['noop']

# 0ms
[plugins.forgit-config]
inline = '''
FORGIT_STASH_FZF_OPTS='--bind="ctrl-x:reload(git stash drop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"'
'''

# 11-12ms
[plugins.zsh-history-substring-search]
github = 'zsh-users/zsh-history-substring-search'
apply = ['defer']


[plugins.vi-mode-before]
inline = '''
export VISUAL=lvim
export EDITOR="$VISUAL"

function zvm_config() {
  ZVM_VI_SURROUND_BINDKEY='s-prefix'
  ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT

  ZVM_INSERT_MODE_CURSOR=$ZVM_CURSOR_BLINKING_BEAM
  ZVM_NORMAL_MODE_CURSOR=$ZVM_CURSOR_BLOCK
  ZVM_OPPEND_MODE_CURSOR=$ZVM_CURSOR_UNDERLINE
}

function custom-vicmd-yank-eol() {
  zle vi-yank-eol
  printf '%s' "$CUTBUFFER" | pbcopy
}

function custom-vicmd-yank() {
  zle vi-yank
  printf '%s' "$CUTBUFFER" | pbcopy
}

function custom-vicmd-yank-whole-line() {
  zle vi-yank-whole-line
  printf '%s' "$CUTBUFFER" | pbcopy
}

function custom-vicmd-put-after() {
  CUTBUFFER="$(pbpaste)"
  zle vi-put-after
}

function custom-vicmd-put-before() {
  CUTBUFFER="$(pbpaste)"
  zle vi-put-before
}

function zvm_after_lazy_keybindings() {
  bindkey -M vicmd 's' your_normal_widget
  bindkey -M visual 'n' your_visual_widget

  # custom copy and paste widgets
  zvm_define_widget custom-vicmd-yank-eol
  zvm_define_widget custom-vicmd-yank
  zvm_define_widget custom-vicmd-yank-whole-line
  zvm_define_widget custom-vicmd-put-after
  zvm_define_widget custom-vicmd-put-before

  zvm_bindkey vicmd H beginning-of-line
  zvm_bindkey vicmd L end-of-line
  zvm_bindkey vicmd K run-help
  zvm_bindkey vicmd '/' fzf-history-widget
  zvm_bindkey vicmd Y custom-vicmd-yank-eol
  zvm_bindkey vicmd y custom-vicmd-yank
  zvm_bindkey vicmd yy custom-vicmd-yank-whole-line

  zvm_bindkey vicmd p custom-vicmd-put-before
  zvm_bindkey vicmd P custom-vicmd-put-after

  # make delete actually delete again
  zvm_bindkey vicmd D vi-kill-eol
  zvm_bindkey vicmd d vi-delete
}

'''

[plugins.vi-mode]
github = 'jeffreytse/zsh-vi-mode'
# apply = ['defer']

# 0ms
[plugins.ohmytmux]
github = 'wren/.tmux'
use = ['.tmux.conf']
apply = ['direnv-ohmytmux']

[plugins.lolcat]
github = 'jaseg/lolcat'
apply = ['cmd-exists', 'make', 'clean-cmd-exists', 'symlink-bin']

[plugins.batpipe]
github = 'eth-p/bat-extras'
use = ['/build.sh']
apply = ['cmd-exists', 'build', 'clean-cmd-exists', 'lessopen', 'path-bin']

