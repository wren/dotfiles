- brew:
    - "age" # Simple, modern, secure file encryption
    - "sops" # Editor of encrypted files
    - "fd" # Simple, fast and user-friendly alternative to find
    - "dopplerhq/cli/doppler" # Cli client for doppler.com

- shell:
    - description: Checking Encryption Key (Age)
      command: |-
        if [[ -f $SOPS_AGE_KEY_FILE ]]; then
          chmod 400 $SOPS_AGE_KEY_FILE
          echo "Encryption key already exists: $SOPS_AGE_KEY_FILE"
          exit 0
        fi

        echo 'Retrieving dotfiles key from Doppler...'

        if [[ ! -f DOPPLER_TOKEN ]]; then
          echo 'ERROR: Doppler is not setup!'
          echo 'Check `bundles/encryption/README.md` for more info.'
          exit 1
        fi

        echo 'Decrypt DOPPLER_TOKEN...'
        export DOPPLER_TOKEN="$(age -d DOPPLER_TOKEN)"

        KEY_PROBABLY="$(doppler secrets get DOTFILES_KEY --plain)"

        if [[ -z $KEY_PROBABLY ]]; then
          echo 'Failed to download key!'
          exit 1
        fi

        printf 'Downloading and decrypting dotfiles key to %s...\n' $SOPS_AGE_KEY_FILE
        mkdir -pv "$( dirname $SOPS_AGE_KEY_FILE )"
        age -d  <(printf %s $KEY_PROBABLY) >> $SOPS_AGE_KEY_FILE || exit 1
        chmod 400 $SOPS_AGE_KEY_FILE


    - description: Decrypt encrypted directories & files
      command: |-
        if [[ ! -f $SOPS_AGE_KEY_FILE ]]; then
          printf "$UNDERLINE$(tput setaf 1)ERROR:$(tput sgr0) "
          printf "Encryption key (Age) not available.\n"
          exit 1
        fi

        decrypt_script='
          OLD_DIR="{//}"
          OLD_FILE="{/}"
          NEW_DIR="${OLD_DIR//[_.]enc}"
          NEW_FILE="${OLD_FILE//[_.]enc}"
          OLD_PATH="${OLD_DIR}/${OLD_FILE}"
          NEW_PATH="${NEW_DIR}/${NEW_FILE}"

          if [[ ! -r $NEW_PATH ]] || [[ ! -s $NEW_PATH ]]; then
            printf " - decrypting %s\n" $OLD_PATH
            mkdir -p $NEW_DIR
            sops --decrypt $OLD_PATH > $NEW_PATH || {
              print -P "   %F{001} Problem decrypting %s\n" $OLD_PATH
            }
          else
            if [[ -n "$( diff -q $NEW_PATH <(sops -d $OLD_PATH) )" ]]; then
              printf " - encrypting %s\n" $NEW_PATH
              sops --input-type binary --output-type json --encrypt $NEW_PATH > $OLD_PATH || {
                print -P "   %F{001} Problem encrypting %s\n" $NEW_PATH
              }
            fi
          fi
        '

        # Decrypt files in folders
        cd "$DOTFILES_DIR"
        for dir in $(fd -HI -t d '[\._]enc'); do
          fd -HI -t f . $dir -x zsh -c $decrypt_script
        done
        # Decrypt individual files
        fd -HI -t f '[\._]enc' -x zsh -c $decrypt_script
