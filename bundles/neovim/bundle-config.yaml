- shell:
    - description: Checking Neovim installation
      command: |-
        latest_version=$(curl -fLs https://api.github.com/repos/neovim/neovim/releases/latest | jq -r '.name')

        if command -v nvim &> /dev/null; then
          installed_version="$(nvim --version | head -1)"
          if [[ "$latest_version" != $installed_version ]]; then
            echo "Neovim upgrade available!"
            echo "Installed: $installed_version"
            echo "Latest:    $latest_version"
            echo
            echo "To upgrade, run:"
            echo "  rm '/usr/local/bin/nvim'"
            echo "Then try this script again"
          fi
          exit 0
        fi
        echo "Downloading ${latest_version}..."
        my_dir="$(mktemp -d)"
        cd $my_dir
        my_file='nvim-macos.tar.gz'
        my_url="https://github.com/neovim/neovim/releases/download/stable/${my_file}"

        curl -fLsO $my_url
        shasum --check <(curl -Ls ${my_url}.sha256sum)
        tar xzf $my_file

        my_target='/usr/local/share/nvim/stable'
        mkdir -p $my_target
        my_version="$(nvim-osx64/bin/nvim --version | head -1 | sed 's/^NVIM //g')"

        rm -f "${my_target}/latest"
        ln -sf "${my_target}/${my_version}" "${my_target}/latest"
        if  [[ -d "${my_target}/${my_version}" ]];  then
          echo "Already have ${my_version}. Skipping..."
          exit 0
        fi

        mv -v nvim-osx64 "${my_target}/${my_version}"

- link:
    /usr/local/bin/nvim: /usr/local/share/nvim/stable/latest/bin/nvim

- create:
    - ~/.config/lvim

- link:
    ~/.config/lvim:
        glob: true
        path: '*'
        exclude:
          - bundle-config.yaml
          - dictionaries

    ~/.local/share/nvim/spell/custom.en.utf-8.add: dictionaries/en.dict
    ~/.local/share/nvim/spell/custom.es.utf-8.add: dictionaries/es.dict

- shell:
    - description: Installing Lunar vim
      command: |-
        if command -v lvim &> /dev/null; then
          echo "Lunar vim already installed"
          exit 0
        fi

        expect -- <(cat << 'EOF'
        #!/usr/bin/env expect
        set timeout -1
        spawn /bin/bash
        send -- "/bin/bash <(/usr/bin/curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh)\n"
        expect "Would you like to install LunarVim's NodeJS dependencies?"
        send -- "y\n"
        expect "Would you like to install LunarVim's Python dependencies?"
        send -- "y\n"
        expect "Would you like to install LunarVim's Rust dependencies?"
        send -- "y\n"
        expect "Thank you for installing LunarVim!!"
        send -- "exit\n"
        expect eof"
        EOF
        )
